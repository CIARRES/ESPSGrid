#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// PROGRAM METERING
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(INT,SM01VA)
  __DECLARE_VAR(INT,SM01VB)
  __DECLARE_VAR(INT,SM01VC)
  __DECLARE_VAR(INT,SM01IA)
  __DECLARE_VAR(INT,SM01IB)
  __DECLARE_VAR(INT,SM01IC)
  __DECLARE_VAR(INT,SM02VA)
  __DECLARE_VAR(INT,SM02VB)
  __DECLARE_VAR(INT,SM02VC)
  __DECLARE_VAR(INT,SM02IA)
  __DECLARE_VAR(INT,SM02IB)
  __DECLARE_VAR(INT,SM02IC)
  __DECLARE_VAR(INT,SM03VA)
  __DECLARE_VAR(INT,SM03VB)
  __DECLARE_VAR(INT,SM03VC)
  __DECLARE_VAR(INT,SM03IA)
  __DECLARE_VAR(INT,SM03IB)
  __DECLARE_VAR(INT,SM03IC)
  __DECLARE_VAR(INT,SM04VA)
  __DECLARE_VAR(INT,SM04VB)
  __DECLARE_VAR(INT,SM04VC)
  __DECLARE_VAR(INT,SM04IA)
  __DECLARE_VAR(INT,SM04IB)
  __DECLARE_VAR(INT,SM04IC)
  __DECLARE_VAR(BOOL,SM01SECST)
  __DECLARE_VAR(BOOL,SM02SECST)
  __DECLARE_VAR(BOOL,SM03SECST)
  __DECLARE_VAR(BOOL,SM04SECST)
  __DECLARE_VAR(BOOL,CB01CST)
  __DECLARE_VAR(BOOL,CB02CST)
  __DECLARE_VAR(BOOL,CB03CST)
  __DECLARE_VAR(BOOL,CB04CST)
  __DECLARE_VAR(BOOL,CB01OPST)
  __DECLARE_VAR(BOOL,CB02OPST)
  __DECLARE_VAR(BOOL,CB03OPST)
  __DECLARE_VAR(BOOL,CB04OPST)
  __DECLARE_VAR(BOOL,CLOSE)

} METERING;

void METERING_init__(METERING *data__, BOOL retain);
// Code part
void METERING_body__(METERING *data__);
#endif //__POUS_H
